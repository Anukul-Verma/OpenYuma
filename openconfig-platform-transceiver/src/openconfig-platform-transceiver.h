
#ifndef _H_openconfig_platform_transceiver
#define _H_openconfig_platform_transceiver
/* 
 * Copyright (c) 2008-2012, Andy Bierman, All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump 2.5-5

    Combined SIL header
    module openconfig-platform-transceiver
    revision 2018-05-15
    namespace http://openconfig.net/yang/platform/transceiver
    organization OpenConfig working group

 */

#include <xmlstring.h>

#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "status.h"
#include "val.h"

#ifdef __cplusplus
extern "C" {
#endif

#define y_openconfig_platform_transceiver_M_openconfig_platform_transceiver (const xmlChar *)"openconfig-platform-transceiver"

#define y_openconfig_platform_transceiver_N_transceiver (const xmlChar *)"transceiver"
#define y_openconfig_platform_transceiver_R_openconfig_platform_transceiver (const xmlChar *)"2018-05-15"

/********************************************************************
* FUNCTION y_openconfig_platform_transceiver_init
* 
* initialize the openconfig-platform-transceiver server instrumentation library
* 
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t y_openconfig_platform_transceiver_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION y_openconfig_platform_transceiver_init2
* 
* SIL init phase 2: non-config data structures
* Called after running config is loaded
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t y_openconfig_platform_transceiver_init2 (void);

/********************************************************************
* FUNCTION y_openconfig_platform_transceiver_cleanup
*    cleanup the server instrumentation library
* 
********************************************************************/
extern void y_openconfig_platform_transceiver_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif
